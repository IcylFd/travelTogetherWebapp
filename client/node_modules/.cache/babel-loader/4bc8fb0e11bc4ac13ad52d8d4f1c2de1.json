{"ast":null,"code":"(function (self) {\n  'use strict'; // if __disableNativeFetch is set to true, the it will always polyfill fetch\n  // with Ajax.\n\n  if (!self.__disableNativeFetch && self.fetch) {\n    return;\n  }\n\n  function normalizeName(name) {\n    if (typeof name !== 'string') {\n      name = String(name);\n    }\n\n    if (/[^a-z0-9\\-#$%&'*+.\\^_`|~]/i.test(name)) {\n      throw new TypeError('Invalid character in header field name');\n    }\n\n    return name.toLowerCase();\n  }\n\n  function normalizeValue(value) {\n    if (typeof value !== 'string') {\n      value = String(value);\n    }\n\n    return value;\n  }\n\n  function Headers(headers) {\n    this.map = {};\n\n    if (headers instanceof Headers) {\n      headers.forEach(function (value, name) {\n        this.append(name, value);\n      }, this);\n    } else if (headers) {\n      Object.getOwnPropertyNames(headers).forEach(function (name) {\n        this.append(name, headers[name]);\n      }, this);\n    }\n  }\n\n  Headers.prototype.append = function (name, value) {\n    name = normalizeName(name);\n    value = normalizeValue(value);\n    var list = this.map[name];\n\n    if (!list) {\n      list = [];\n      this.map[name] = list;\n    }\n\n    list.push(value);\n  };\n\n  Headers.prototype['delete'] = function (name) {\n    delete this.map[normalizeName(name)];\n  };\n\n  Headers.prototype.get = function (name) {\n    var values = this.map[normalizeName(name)];\n    return values ? values[0] : null;\n  };\n\n  Headers.prototype.getAll = function (name) {\n    return this.map[normalizeName(name)] || [];\n  };\n\n  Headers.prototype.has = function (name) {\n    return this.map.hasOwnProperty(normalizeName(name));\n  };\n\n  Headers.prototype.set = function (name, value) {\n    this.map[normalizeName(name)] = [normalizeValue(value)];\n  };\n\n  Headers.prototype.forEach = function (callback, thisArg) {\n    Object.getOwnPropertyNames(this.map).forEach(function (name) {\n      this.map[name].forEach(function (value) {\n        callback.call(thisArg, value, name, this);\n      }, this);\n    }, this);\n  };\n\n  function consumed(body) {\n    if (body.bodyUsed) {\n      return Promise.reject(new TypeError('Already read'));\n    }\n\n    body.bodyUsed = true;\n  }\n\n  function fileReaderReady(reader) {\n    return new Promise(function (resolve, reject) {\n      reader.onload = function () {\n        resolve(reader.result);\n      };\n\n      reader.onerror = function () {\n        reject(reader.error);\n      };\n    });\n  }\n\n  function readBlobAsArrayBuffer(blob) {\n    var reader = new FileReader();\n    reader.readAsArrayBuffer(blob);\n    return fileReaderReady(reader);\n  }\n\n  function readBlobAsText(blob, options) {\n    var reader = new FileReader();\n    var contentType = options.headers.map['content-type'] ? options.headers.map['content-type'].toString() : '';\n    var regex = /charset\\=[0-9a-zA-Z\\-\\_]*;?/;\n\n    var _charset = blob.type.match(regex) || contentType.match(regex);\n\n    var args = [blob];\n\n    if (_charset) {\n      args.push(_charset[0].replace(/^charset\\=/, '').replace(/;$/, ''));\n    }\n\n    reader.readAsText.apply(reader, args);\n    return fileReaderReady(reader);\n  }\n\n  var support = {\n    blob: 'FileReader' in self && 'Blob' in self && function () {\n      try {\n        new Blob();\n        return true;\n      } catch (e) {\n        return false;\n      }\n    }(),\n    formData: 'FormData' in self,\n    arrayBuffer: 'ArrayBuffer' in self\n  };\n\n  function Body() {\n    this.bodyUsed = false;\n\n    this._initBody = function (body, options) {\n      this._bodyInit = body;\n\n      if (typeof body === 'string') {\n        this._bodyText = body;\n      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n        this._bodyBlob = body;\n        this._options = options;\n      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n        this._bodyFormData = body;\n      } else if (!body) {\n        this._bodyText = '';\n      } else if (support.arrayBuffer && ArrayBuffer.prototype.isPrototypeOf(body)) {// Only support ArrayBuffers for POST method.\n        // Receiving ArrayBuffers happens via Blobs, instead.\n      } else {\n        throw new Error('unsupported BodyInit type');\n      }\n    };\n\n    if (support.blob) {\n      this.blob = function () {\n        var rejected = consumed(this);\n\n        if (rejected) {\n          return rejected;\n        }\n\n        if (this._bodyBlob) {\n          return Promise.resolve(this._bodyBlob);\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as blob');\n        } else {\n          return Promise.resolve(new Blob([this._bodyText]));\n        }\n      };\n\n      this.arrayBuffer = function () {\n        return this.blob().then(readBlobAsArrayBuffer);\n      };\n\n      this.text = function () {\n        var rejected = consumed(this);\n\n        if (rejected) {\n          return rejected;\n        }\n\n        if (this._bodyBlob) {\n          return readBlobAsText(this._bodyBlob, this._options);\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as text');\n        } else {\n          return Promise.resolve(this._bodyText);\n        }\n      };\n    } else {\n      this.text = function () {\n        var rejected = consumed(this);\n        return rejected ? rejected : Promise.resolve(this._bodyText);\n      };\n    }\n\n    if (support.formData) {\n      this.formData = function () {\n        return this.text().then(decode);\n      };\n    }\n\n    this.json = function () {\n      return this.text().then(JSON.parse);\n    };\n\n    return this;\n  } // HTTP methods whose capitalization should be normalized\n\n\n  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT'];\n\n  function normalizeMethod(method) {\n    var upcased = method.toUpperCase();\n    return methods.indexOf(upcased) > -1 ? upcased : method;\n  }\n\n  function Request(input, options) {\n    options = options || {};\n    var body = options.body;\n\n    if (Request.prototype.isPrototypeOf(input)) {\n      if (input.bodyUsed) {\n        throw new TypeError('Already read');\n      }\n\n      this.url = input.url;\n      this.credentials = input.credentials;\n\n      if (!options.headers) {\n        this.headers = new Headers(input.headers);\n      }\n\n      this.method = input.method;\n      this.mode = input.mode;\n\n      if (!body) {\n        body = input._bodyInit;\n        input.bodyUsed = true;\n      }\n    } else {\n      this.url = input;\n    }\n\n    this.credentials = options.credentials || this.credentials || 'omit';\n\n    if (options.headers || !this.headers) {\n      this.headers = new Headers(options.headers);\n    }\n\n    this.method = normalizeMethod(options.method || this.method || 'GET');\n    this.mode = options.mode || this.mode || null;\n    this.referrer = null;\n\n    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n      throw new TypeError('Body not allowed for GET or HEAD requests');\n    }\n\n    this._initBody(body, options);\n  }\n\n  Request.prototype.clone = function () {\n    return new Request(this);\n  };\n\n  function decode(body) {\n    var form = new FormData();\n    body.trim().split('&').forEach(function (bytes) {\n      if (bytes) {\n        var split = bytes.split('=');\n        var name = split.shift().replace(/\\+/g, ' ');\n        var value = split.join('=').replace(/\\+/g, ' ');\n        form.append(decodeURIComponent(name), decodeURIComponent(value));\n      }\n    });\n    return form;\n  }\n\n  function headers(xhr) {\n    var head = new Headers();\n    var pairs = xhr.getAllResponseHeaders().trim().split('\\n');\n    pairs.forEach(function (header) {\n      var split = header.trim().split(':');\n      var key = split.shift().trim();\n      var value = split.join(':').trim();\n      head.append(key, value);\n    });\n    return head;\n  }\n\n  Body.call(Request.prototype);\n\n  function Response(bodyInit, options) {\n    if (!options) {\n      options = {};\n    }\n\n    this._initBody(bodyInit, options);\n\n    this.type = 'default';\n    this.status = options.status;\n    this.ok = this.status >= 200 && this.status < 300;\n    this.statusText = options.statusText;\n    this.headers = options.headers instanceof Headers ? options.headers : new Headers(options.headers);\n    this.url = options.url || '';\n  }\n\n  Body.call(Response.prototype);\n\n  Response.prototype.clone = function () {\n    return new Response(this._bodyInit, {\n      status: this.status,\n      statusText: this.statusText,\n      headers: new Headers(this.headers),\n      url: this.url\n    });\n  };\n\n  Response.error = function () {\n    var response = new Response(null, {\n      status: 0,\n      statusText: ''\n    });\n    response.type = 'error';\n    return response;\n  };\n\n  var redirectStatuses = [301, 302, 303, 307, 308];\n\n  Response.redirect = function (url, status) {\n    if (redirectStatuses.indexOf(status) === -1) {\n      throw new RangeError('Invalid status code');\n    }\n\n    return new Response(null, {\n      status: status,\n      headers: {\n        location: url\n      }\n    });\n  };\n\n  self.Headers = Headers;\n  self.Request = Request;\n  self.Response = Response;\n\n  self.fetch = function (input, init) {\n    return new Promise(function (resolve, reject) {\n      var request;\n\n      if (Request.prototype.isPrototypeOf(input) && !init) {\n        request = input;\n      } else {\n        request = new Request(input, init);\n      }\n\n      var xhr = new XMLHttpRequest();\n\n      function responseURL() {\n        if ('responseURL' in xhr) {\n          return xhr.responseURL;\n        } // Avoid security warnings on getResponseHeader when not allowed by CORS\n\n\n        if (/^X-Request-URL:/m.test(xhr.getAllResponseHeaders())) {\n          return xhr.getResponseHeader('X-Request-URL');\n        }\n\n        return;\n      }\n\n      var __onLoadHandled = false;\n\n      function onload() {\n        if (xhr.readyState !== 4) {\n          return;\n        }\n\n        var status = xhr.status === 1223 ? 204 : xhr.status;\n\n        if (status < 100 || status > 599) {\n          if (__onLoadHandled) {\n            return;\n          } else {\n            __onLoadHandled = true;\n          }\n\n          reject(new TypeError('Network request failed'));\n          return;\n        }\n\n        var options = {\n          status: status,\n          statusText: xhr.statusText,\n          headers: headers(xhr),\n          url: responseURL()\n        };\n        var body = 'response' in xhr ? xhr.response : xhr.responseText;\n\n        if (__onLoadHandled) {\n          return;\n        } else {\n          __onLoadHandled = true;\n        }\n\n        resolve(new Response(body, options));\n      }\n\n      xhr.onreadystatechange = onload;\n      xhr.onload = onload;\n\n      xhr.onerror = function () {\n        if (__onLoadHandled) {\n          return;\n        } else {\n          __onLoadHandled = true;\n        }\n\n        reject(new TypeError('Network request failed'));\n      };\n\n      xhr.open(request.method, request.url, true); // `withCredentials` should be setted after calling `.open` in IE10\n      // http://stackoverflow.com/a/19667959/1219343\n\n      try {\n        if (request.credentials === 'include') {\n          if ('withCredentials' in xhr) {\n            xhr.withCredentials = true;\n          } else {\n            console && console.warn && console.warn('withCredentials is not supported, you can ignore this warning');\n          }\n        }\n      } catch (e) {\n        console && console.warn && console.warn('set withCredentials error:' + e);\n      }\n\n      if ('responseType' in xhr && support.blob) {\n        xhr.responseType = 'blob';\n      }\n\n      request.headers.forEach(function (value, name) {\n        xhr.setRequestHeader(name, value);\n      });\n      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit);\n    });\n  };\n\n  self.fetch.polyfill = true; // Support CommonJS\n\n  if (typeof module !== 'undefined' && module.exports) {\n    module.exports = self.fetch;\n  }\n})(typeof self !== 'undefined' ? self : this);","map":{"version":3,"sources":["/Users/lifangdi/node_modules/fetch-ie8/fetch.js"],"names":["self","__disableNativeFetch","fetch","normalizeName","name","String","test","TypeError","toLowerCase","normalizeValue","value","Headers","headers","map","forEach","append","Object","getOwnPropertyNames","prototype","list","push","get","values","getAll","has","hasOwnProperty","set","callback","thisArg","call","consumed","body","bodyUsed","Promise","reject","fileReaderReady","reader","resolve","onload","result","onerror","error","readBlobAsArrayBuffer","blob","FileReader","readAsArrayBuffer","readBlobAsText","options","contentType","toString","regex","_charset","type","match","args","replace","readAsText","apply","support","Blob","e","formData","arrayBuffer","Body","_initBody","_bodyInit","_bodyText","isPrototypeOf","_bodyBlob","_options","FormData","_bodyFormData","ArrayBuffer","Error","rejected","then","text","decode","json","JSON","parse","methods","normalizeMethod","method","upcased","toUpperCase","indexOf","Request","input","url","credentials","mode","referrer","clone","form","trim","split","bytes","shift","join","decodeURIComponent","xhr","head","pairs","getAllResponseHeaders","header","key","Response","bodyInit","status","ok","statusText","response","redirectStatuses","redirect","RangeError","location","init","request","XMLHttpRequest","responseURL","getResponseHeader","__onLoadHandled","readyState","responseText","onreadystatechange","open","withCredentials","console","warn","responseType","setRequestHeader","send","polyfill","module","exports"],"mappings":"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","sourcesContent":["(function(self) {\n  'use strict';\n\n  // if __disableNativeFetch is set to true, the it will always polyfill fetch\n  // with Ajax.\n  if (!self.__disableNativeFetch && self.fetch) {\n    return\n  }\n\n  function normalizeName(name) {\n    if (typeof name !== 'string') {\n      name = String(name)\n    }\n    if (/[^a-z0-9\\-#$%&'*+.\\^_`|~]/i.test(name)) {\n      throw new TypeError('Invalid character in header field name')\n    }\n    return name.toLowerCase()\n  }\n\n  function normalizeValue(value) {\n    if (typeof value !== 'string') {\n      value = String(value)\n    }\n    return value\n  }\n\n  function Headers(headers) {\n    this.map = {}\n\n    if (headers instanceof Headers) {\n      headers.forEach(function(value, name) {\n        this.append(name, value)\n      }, this)\n\n    } else if (headers) {\n      Object.getOwnPropertyNames(headers).forEach(function(name) {\n        this.append(name, headers[name])\n      }, this)\n    }\n  }\n\n  Headers.prototype.append = function(name, value) {\n    name = normalizeName(name)\n    value = normalizeValue(value)\n    var list = this.map[name]\n    if (!list) {\n      list = []\n      this.map[name] = list\n    }\n    list.push(value)\n  }\n\n  Headers.prototype['delete'] = function(name) {\n    delete this.map[normalizeName(name)]\n  }\n\n  Headers.prototype.get = function(name) {\n    var values = this.map[normalizeName(name)]\n    return values ? values[0] : null\n  }\n\n  Headers.prototype.getAll = function(name) {\n    return this.map[normalizeName(name)] || []\n  }\n\n  Headers.prototype.has = function(name) {\n    return this.map.hasOwnProperty(normalizeName(name))\n  }\n\n  Headers.prototype.set = function(name, value) {\n    this.map[normalizeName(name)] = [normalizeValue(value)]\n  }\n\n  Headers.prototype.forEach = function(callback, thisArg) {\n    Object.getOwnPropertyNames(this.map).forEach(function(name) {\n      this.map[name].forEach(function(value) {\n        callback.call(thisArg, value, name, this)\n      }, this)\n    }, this)\n  }\n\n  function consumed(body) {\n    if (body.bodyUsed) {\n      return Promise.reject(new TypeError('Already read'))\n    }\n    body.bodyUsed = true\n  }\n\n  function fileReaderReady(reader) {\n    return new Promise(function(resolve, reject) {\n      reader.onload = function() {\n        resolve(reader.result)\n      }\n      reader.onerror = function() {\n        reject(reader.error)\n      }\n    })\n  }\n\n  function readBlobAsArrayBuffer(blob) {\n    var reader = new FileReader()\n    reader.readAsArrayBuffer(blob)\n    return fileReaderReady(reader)\n  }\n\n  function readBlobAsText(blob, options) {\n    var reader = new FileReader()\n    var contentType = options.headers.map['content-type'] ? options.headers.map['content-type'].toString() : ''\n    var regex = /charset\\=[0-9a-zA-Z\\-\\_]*;?/\n    var _charset = blob.type.match(regex) || contentType.match(regex)\n    var args = [blob]\n\n    if(_charset) {\n      args.push(_charset[0].replace(/^charset\\=/, '').replace(/;$/, ''))\n    }\n\n    reader.readAsText.apply(reader, args)\n    return fileReaderReady(reader)\n  }\n\n  var support = {\n    blob: 'FileReader' in self && 'Blob' in self && (function() {\n      try {\n        new Blob();\n        return true\n      } catch(e) {\n        return false\n      }\n    })(),\n    formData: 'FormData' in self,\n    arrayBuffer: 'ArrayBuffer' in self\n  }\n\n  function Body() {\n    this.bodyUsed = false\n\n\n    this._initBody = function(body, options) {\n      this._bodyInit = body\n      if (typeof body === 'string') {\n        this._bodyText = body\n      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n        this._bodyBlob = body\n        this._options = options\n      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n        this._bodyFormData = body\n      } else if (!body) {\n        this._bodyText = ''\n      } else if (support.arrayBuffer && ArrayBuffer.prototype.isPrototypeOf(body)) {\n        // Only support ArrayBuffers for POST method.\n        // Receiving ArrayBuffers happens via Blobs, instead.\n      } else {\n        throw new Error('unsupported BodyInit type')\n      }\n    }\n\n    if (support.blob) {\n      this.blob = function() {\n        var rejected = consumed(this)\n        if (rejected) {\n          return rejected\n        }\n\n        if (this._bodyBlob) {\n          return Promise.resolve(this._bodyBlob)\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as blob')\n        } else {\n          return Promise.resolve(new Blob([this._bodyText]))\n        }\n      }\n\n      this.arrayBuffer = function() {\n        return this.blob().then(readBlobAsArrayBuffer)\n      }\n\n      this.text = function() {\n        var rejected = consumed(this)\n        if (rejected) {\n          return rejected\n        }\n\n        if (this._bodyBlob) {\n          return readBlobAsText(this._bodyBlob, this._options)\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as text')\n        } else {\n          return Promise.resolve(this._bodyText)\n        }\n      }\n    } else {\n      this.text = function() {\n        var rejected = consumed(this)\n        return rejected ? rejected : Promise.resolve(this._bodyText)\n      }\n    }\n\n    if (support.formData) {\n      this.formData = function() {\n        return this.text().then(decode)\n      }\n    }\n\n    this.json = function() {\n      return this.text().then(JSON.parse)\n    }\n\n    return this\n  }\n\n  // HTTP methods whose capitalization should be normalized\n  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT']\n\n  function normalizeMethod(method) {\n    var upcased = method.toUpperCase()\n    return (methods.indexOf(upcased) > -1) ? upcased : method\n  }\n\n  function Request(input, options) {\n    options = options || {}\n    var body = options.body\n    if (Request.prototype.isPrototypeOf(input)) {\n      if (input.bodyUsed) {\n        throw new TypeError('Already read')\n      }\n      this.url = input.url\n      this.credentials = input.credentials\n      if (!options.headers) {\n        this.headers = new Headers(input.headers)\n      }\n      this.method = input.method\n      this.mode = input.mode\n      if (!body) {\n        body = input._bodyInit\n        input.bodyUsed = true\n      }\n    } else {\n      this.url = input\n    }\n\n    this.credentials = options.credentials || this.credentials || 'omit'\n    if (options.headers || !this.headers) {\n      this.headers = new Headers(options.headers)\n    }\n    this.method = normalizeMethod(options.method || this.method || 'GET')\n    this.mode = options.mode || this.mode || null\n    this.referrer = null\n\n    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n      throw new TypeError('Body not allowed for GET or HEAD requests')\n    }\n    this._initBody(body, options)\n  }\n\n  Request.prototype.clone = function() {\n    return new Request(this)\n  }\n\n  function decode(body) {\n    var form = new FormData()\n    body.trim().split('&').forEach(function(bytes) {\n      if (bytes) {\n        var split = bytes.split('=')\n        var name = split.shift().replace(/\\+/g, ' ')\n        var value = split.join('=').replace(/\\+/g, ' ')\n        form.append(decodeURIComponent(name), decodeURIComponent(value))\n      }\n    })\n    return form\n  }\n\n  function headers(xhr) {\n    var head = new Headers()\n    var pairs = xhr.getAllResponseHeaders().trim().split('\\n')\n    pairs.forEach(function(header) {\n      var split = header.trim().split(':')\n      var key = split.shift().trim()\n      var value = split.join(':').trim()\n      head.append(key, value)\n    })\n    return head\n  }\n\n  Body.call(Request.prototype)\n\n  function Response(bodyInit, options) {\n    if (!options) {\n      options = {}\n    }\n\n    this._initBody(bodyInit, options)\n    this.type = 'default'\n    this.status = options.status\n    this.ok = this.status >= 200 && this.status < 300\n    this.statusText = options.statusText\n    this.headers = options.headers instanceof Headers ? options.headers : new Headers(options.headers)\n    this.url = options.url || ''\n  }\n\n  Body.call(Response.prototype)\n\n  Response.prototype.clone = function() {\n    return new Response(this._bodyInit, {\n      status: this.status,\n      statusText: this.statusText,\n      headers: new Headers(this.headers),\n      url: this.url\n    })\n  }\n\n  Response.error = function() {\n    var response = new Response(null, {status: 0, statusText: ''})\n    response.type = 'error'\n    return response\n  }\n\n  var redirectStatuses = [301, 302, 303, 307, 308]\n\n  Response.redirect = function(url, status) {\n    if (redirectStatuses.indexOf(status) === -1) {\n      throw new RangeError('Invalid status code')\n    }\n\n    return new Response(null, {status: status, headers: {location: url}})\n  }\n\n  self.Headers = Headers;\n  self.Request = Request;\n  self.Response = Response;\n\n  self.fetch = function(input, init) {\n    return new Promise(function(resolve, reject) {\n      var request\n      if (Request.prototype.isPrototypeOf(input) && !init) {\n        request = input\n      } else {\n        request = new Request(input, init)\n      }\n\n      var xhr = new XMLHttpRequest()\n\n      function responseURL() {\n        if ('responseURL' in xhr) {\n          return xhr.responseURL\n        }\n\n        // Avoid security warnings on getResponseHeader when not allowed by CORS\n        if (/^X-Request-URL:/m.test(xhr.getAllResponseHeaders())) {\n          return xhr.getResponseHeader('X-Request-URL')\n        }\n\n        return;\n      }\n\n      var __onLoadHandled = false;\n\n      function onload() {\n        if (xhr.readyState !== 4) {\n          return\n        }\n        var status = (xhr.status === 1223) ? 204 : xhr.status\n        if (status < 100 || status > 599) {\n          if (__onLoadHandled) { return; } else { __onLoadHandled = true; }\n          reject(new TypeError('Network request failed'))\n          return\n        }\n        var options = {\n          status: status,\n          statusText: xhr.statusText,\n          headers: headers(xhr),\n          url: responseURL()\n        }\n        var body = 'response' in xhr ? xhr.response : xhr.responseText;\n\n        if (__onLoadHandled) { return; } else { __onLoadHandled = true; }\n        resolve(new Response(body, options))\n      }\n      xhr.onreadystatechange = onload;\n      xhr.onload = onload;\n      xhr.onerror = function() {\n        if (__onLoadHandled) { return; } else { __onLoadHandled = true; }\n        reject(new TypeError('Network request failed'))\n      }\n\n      xhr.open(request.method, request.url, true)\n\n      // `withCredentials` should be setted after calling `.open` in IE10\n      // http://stackoverflow.com/a/19667959/1219343\n      try {\n        if (request.credentials === 'include') {\n          if ('withCredentials' in xhr) {\n            xhr.withCredentials = true;\n          } else {\n            console && console.warn && console.warn('withCredentials is not supported, you can ignore this warning');\n          }\n        }\n      } catch (e) {\n        console && console.warn && console.warn('set withCredentials error:' + e);\n      }\n\n      if ('responseType' in xhr && support.blob) {\n        xhr.responseType = 'blob'\n      }\n\n      request.headers.forEach(function(value, name) {\n        xhr.setRequestHeader(name, value)\n      })\n\n      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit)\n    })\n  }\n  self.fetch.polyfill = true\n\n  // Support CommonJS\n  if (typeof module !== 'undefined' && module.exports) {\n    module.exports = self.fetch;\n  }\n})(typeof self !== 'undefined' ? self : this);\n"]},"metadata":{},"sourceType":"script"}